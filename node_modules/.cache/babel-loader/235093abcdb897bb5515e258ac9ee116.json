{"ast":null,"code":"// Create an action that is going to fetch the grads from my api\nexport const fetchUsers = () => {\n  return dispatch => {\n    fetch('http://127.0.0.1:3000/users').then(resp => resp.json()).then(users => dispatch({\n      type: 'FETCH_USERS',\n      payload: users\n    }));\n  };\n};\nexport const addUser = user => {\n  return dispatch => {\n    fetch('http://127.0.0.1:3000/users', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(user => dispatch({\n      type: 'ADD_USER',\n      payload: user\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/bradleylopez/Development/personalProjects/BradShowpage/frontend/showpage-client/src/actions/usersActions.js"],"names":["fetchUsers","dispatch","fetch","then","resp","json","users","type","payload","addUser","user","method","body","JSON","stringify","headers"],"mappings":"AAAA;AAEA,OAAO,MAAMA,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,KAAK,IAAIL,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAFvB;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAOT,QAAQ,IAAI;AACfC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCS,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF2B;AAGjCK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHwB,KAAhC,CAAL,CAKCZ,IALD,CAKMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EALd,EAMCF,IAND,CAMMO,IAAI,IAAIT,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAEE;AAA7B,KAAD,CANtB;AAOH,GARD;AASH,CAVM","sourcesContent":["// Create an action that is going to fetch the grads from my api\n\nexport const fetchUsers = () => {\n    return dispatch => {\n        fetch('http://127.0.0.1:3000/users')\n        .then(resp => resp.json())\n        .then(users => dispatch({ type: 'FETCH_USERS', payload: users}))\n    }\n}\n\nexport const addUser = (user) => {\n    return dispatch => {\n        fetch('http://127.0.0.1:3000/users', {\n            method: 'POST',\n            body: JSON.stringify(user),\n            headers: { 'Content-Type': 'application/json'}\n        })\n        .then(resp => resp.json())\n        .then(user => dispatch({ type: 'ADD_USER', payload: user}))\n    }\n}"]},"metadata":{},"sourceType":"module"}